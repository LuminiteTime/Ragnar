# image: ragnar:latest

# services:
  # - docker:dind

# variables:
  # DOCKER_DRIVER: overlay2

# before_script:
  # - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

stages:
  - echo_stage
  - lint

echo_job:
  stage: echo_stage
  script:
      - echo "Placeholder"
#     - docker build -t $CI_REGISTRY_IMAGE:latest .
#     - docker push $CI_REGISTRY_IMAGE:latest

lint_backend:
  image: python:latest
  stage: lint
  before_script:
    - PIP_VERSION=$(pip --version | cut -d' ' -f2)
    - if [[ "$PIP_VERSION" < "24.0" ]]; then pip install --upgrade pip; fi
    - pip install pylint
    - curl -sL https://deb.nodesource.com/setup_16.x | bash -
    - apt-get install -y nodejs
  script:
    - npm run lint:backend # We decided to use tools for linting for Ragnar the same as used for Open-WebUI, thus
                            # configuration is taken from package.json of Open-WebU
  artifacts:
    when: always
    paths:
      - backend-reports/

lint_frontend:
  image: node:latest
  stage: lint
  before_script:
    - npm install --frozen-lockfile
  script:
    - npm run lint:frontend # We decided to use tools for linting for Ragnar the same as used for Open-WebUI, thus
                            # configuration is taken from package.json of Open-WebU
  artifacts:
    when: always
    paths:
      - frontend-reports/

